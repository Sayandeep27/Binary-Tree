class Solution {
public:
    int widthOfBinaryTree(TreeNode* root) {
         
         if(root==NULL) return 0;

         queue<pair<TreeNode*,int>>q;
         q.push({root,0});

         int ans=0;

         while(!q.empty())
         {
             int n=q.size();

             int leftmost,rightmost;

             for(int i=0;i<n;i++)
             {
                 TreeNode* node=q.front().first;
                 long long curr=q.front().second;
                 q.pop();

                 if(i==0) leftmost=curr;
                 if(i==n-1) rightmost=curr;

                 if(node->left!=NULL) q.push({node->left,2*curr+1});
                 if(node->right!=NULL) q.push({node->right,2*curr+2});
             }


             ans=max(ans,rightmost-leftmost+1);

         }

         return ans;

    }
};
